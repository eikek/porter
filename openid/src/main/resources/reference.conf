porter.openid {
  # binding info
  host = localhost
  port = 8888

  # a contact address that is sent to relying parties or displayed
  # to the end user in case of an error
  #contact =

  # a porter.auth.Decider impl that decides if a given AuthResult
  # represents a successful authentication
  decider = porter.auth.OneSuccessfulVote

  # where to look for static resources
  static-resource-dir = static

  # where to look for html templates
  template-dir = ${porter.openid.static-resource-dir}

  # the name used for the cookie that stores the "remember-me" token
  cookie-name = PORTER

  # base64 symmetric key for cookie encryption (16 or 32byte, depending
  # on your jce capabilities)
  # by default a random one is generated
  #cookie-key =

  # whether to set the "secure" flag of the cookie
  cookie-secure = true

  # the encryption scheme used for creating passwords. possible values are
  # the supported schemes with or without additional configuration.
  # See `Password` object for more details
  # Examples:
  #  bcrypt        = bcrypt with standard configuration (strength between 10-15)
  #  bcrypt:12     = bcrypt with strength 12
  #  scrypt        = scrypt with standard configuration
  #  scrypt:65536  = scrypt with n=65536
  #  scrypt:65536:18 = scrypt with n=65536 and r=18
  #  pbkdf2-sha1   = PBKDF2 with HmacSha1 and default rounds
  #  pbkdf2-sha1:60000 = PBKDF2 with HmacSha1 with 60000 rounds
  #  digest:SHA-512 = sha512 digest with standard configuration (500000 rounds)
  #  digest:MD5:800000 = md5 digest with 800000 rounds
  #  random        = one of the standard encryption schemes randomly chosen
  password-crypt = random

  # list of realms the openid extensions should be
  # restricted to. If empty, all realms are considered
  realms = []

  # a default realm to use, if none is specified with the url. if
  # not specified the realm id 'default' is used.
  default-realm = default

  # the url to this service. If not defined,
  # the http://bind:port url will be used.
  #endpoint-base-url = https://myopenid.domain.com/some/path/without/slash
}
