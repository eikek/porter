# include default configuration; overwrite things below
# see https://github.com/typesafehub/config for more info
include "application"

akka {
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    enabled-transports = [ "akka.remote.netty.tcp" ]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 4554
    }
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
}

porter {
  validators: [
    { class: "porter.auth.PasswordValidator", params: {} }
    { class: "porter.auth.DigestValidator", params: {} }
    { class: "porter.auth.DerivedValidator", params: {} }
  ]

  # mutable and read-only store implementations can be specified here.
  stores: [
    # MongoStore is mutable and requires a running mongodb server
    { class: "porter.app.MongoStore", params: { host = "localhost", port = 27017, dbname = "porterdb" }, realms: [] }

    # ConfigStore allows to specify some data in this file, see `examplestore` config below
    #{ class: "porter.app.ConfigStore", params: ${porter.examplestore} }

    # PropertyFileStore allows to specify a java properties file
    #{ class: "porter.app.PropertyFileStore", params: { file: "/some/file.properties" } }
  ]

  permissionFactories: []

  telnet {
    enabled = true
    host = localhost
    port = 2345
  }
  http {
    enabled = true
    host = localhost
    port = 6789
  }

  # example data for ConfigStore
  #examplestore {
  #  realm1: {
  #    name: "my great realm"
  #    groups: {
  #      admin: {
  #        rules: [ "bla.bla", "!bla.bla.blop" ]
  #        props: {
  #          key: "value"
  #        }
  #      }
  #    }
  #    accounts: {
  #      john: {
  #        secret: "bcryptstring"
  #        groups: [ "admin", "user" ]
  #        props: {
  #          key: "value"
  #        }
  #      }
  #    }
  #  }
  #}
}